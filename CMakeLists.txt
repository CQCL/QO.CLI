cmake_minimum_required(VERSION 3.20)

project(qo_cli LANGUAGES C CXX)

include(GNUInstallDirs)
include(CMakeDependentOption)
include(Version.cmake)

add_definitions(-DQO_CLI_VERSION=${QO_CLI_VERSION})

set(CMAKE_POSITION_INDEPENDENT_CODE ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_PREFIX_PATH ${CMAKE_BINARY_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_CXX_STANDARD 20)

#MESSAGE(STATUS "INFO: CONAN_DEFINES     : ${CONAN_DEFINES}")
#MESSAGE(STATUS "INFO: CONAN_LIBS        : ${CONAN_LIBS}")
#MESSAGE(STATUS "INFO: CONAN_INCLUDE_DIRS: ${CONAN_INCLUDE_DIRS}")

find_package(cppcodec CONFIG REQUIRED)
find_package(magic_enum CONFIG REQUIRED)
find_package(spdlog CONFIG REQUIRED)
add_subdirectory(dependencies/qo_common)
find_package(yaml-cpp CONFIG REQUIRED)

if (CMAKE_BUILD_TYPE STREQUAL "Debug")
    add_link_options(-fsanitize=address)
endif()

option(INCLUDE_SUPPORT_FOR_KEYGEN "Enable keygen subcommand" ON)
option(INCLUDE_SUPPORT_FOR_KEYDECRYPT "Enable key decrypt subcommand" ON)
option(INCLUDE_SUPPORT_FOR_ONBOARD "Enable onboard subcommand" ON)
option(INCLUDE_SUPPORT_FOR_RANDOMNESS_API "Enable randomness(api) subcommand" ON)
option(INCLUDE_SUPPORT_FOR_USAGE "Enable usage subcommand" ON)

MESSAGE(STATUS "INFO: INCLUDE_SUPPORT_FOR_KEYDECRYPT: ${INCLUDE_SUPPORT_FOR_KEYDECRYPT}")
MESSAGE(STATUS "INFO: INCLUDE_SUPPORT_FOR_KEYGEN    : ${INCLUDE_SUPPORT_FOR_KEYGEN}")
MESSAGE(STATUS "INFO: INCLUDE_SUPPORT_FOR_ONBOARD   : ${INCLUDE_SUPPORT_FOR_ONBOARD}")
MESSAGE(STATUS "INFO: INCLUDE_SUPPORT_FOR_RANDOMNESS_API: ${INCLUDE_SUPPORT_FOR_RANDOMNESS_API}")
MESSAGE(STATUS "INFO: INCLUDE_SUPPORT_FOR_USAGE: ${INCLUDE_SUPPORT_FOR_USAGE}")

if(INCLUDE_SUPPORT_FOR_KEYGEN)
    add_compile_definitions(INCLUDE_SUPPORT_FOR_KEYGEN)
endif(INCLUDE_SUPPORT_FOR_KEYGEN)

if(INCLUDE_SUPPORT_FOR_KEYDECRYPT)
add_subdirectory(dependencies/qo_decrypt)
    add_compile_definitions(INCLUDE_SUPPORT_FOR_KEYDECRYPT)
endif(INCLUDE_SUPPORT_FOR_KEYDECRYPT)




if(INCLUDE_SUPPORT_FOR_ONBOARD)
    add_compile_definitions(INCLUDE_SUPPORT_FOR_ONBOARD)
endif(INCLUDE_SUPPORT_FOR_ONBOARD)

##Temporarily disabled
#

if(INCLUDE_SUPPORT_FOR_USAGE)
    add_compile_definitions(INCLUDE_SUPPORT_FOR_USAGE)
endif(INCLUDE_SUPPORT_FOR_USAGE)

if(INCLUDE_SUPPORT_FOR_RANDOMNESS_API)
    add_compile_definitions(INCLUDE_SUPPORT_FOR_RANDOMNESS_API)
endif(INCLUDE_SUPPORT_FOR_RANDOMNESS_API)

add_subdirectory(src)

enable_testing()

add_subdirectory(package)
